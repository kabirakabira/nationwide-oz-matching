#! Setting up workspace
## Modifying options
options(scipen = 999)
options(timeout = 180)
## Installing and loading required packages
usePackage <- function(p) {
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("dplyr")
usePackage("tidyr")
usePackage("tidycensus")
usePackage("tigris")
usePackage("sf")
usePackage("readxl")
usePackage("leaflet")
census_api_key(readLines("dependencies/censuskey.txt", warn = F))
## Grab Universe Data
## Get data on all census tracts nationwide
state.list <- c(
"AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC",
"FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY",
"LA", "ME", "MT", "NE", "NV", "NH", "NJ", "NM", "NY",
"NC", "ND", "OH", "OK", "OR", "MD", "MA", "MI", "MN",
"MS", "MO", "PA", "RI", "SC", "SD", "TN", "TX", "UT",
"VT", "VA", "WA", "WV", "WI", "WY"
)
variable.list <- c(
"B06012_001E", # Total Pop
"B06012_002E", # Below 100%
"B06012_003E", # 100-150%
"B19013_001E"  # MHHI
)
tracts.nationwide <- get_acs(
geography = "tract",
state = state.list[1],
year = 2009,
survey = "acs5",
variables = variable.list,
geometry = FALSE
)
#! Setting up workspace
## Modifying options
options(scipen = 999)
options(timeout = 180)
## Installing and loading required packages
usePackage <- function(p) {
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("dplyr")
usePackage("tidyr")
usePackage("tidycensus")
usePackage("tigris")
usePackage("sf")
usePackage("readxl")
usePackage("leaflet")
census_api_key(readLines("dependencies/censuskey.txt", warn = F))
## Grab Universe Data
## Get data on all census tracts nationwide
state.list <- c(
"AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC",
"FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY",
"LA", "ME", "MT", "NE", "NV", "NH", "NJ", "NM", "NY",
"NC", "ND", "OH", "OK", "OR", "MD", "MA", "MI", "MN",
"MS", "MO", "PA", "RI", "SC", "SD", "TN", "TX", "UT",
"VT", "VA", "WA", "WV", "WI", "WY"
)
variable.list <- c(
"B06012_001E", # Total Pop
"B06012_002E", # Below 100%
"B06012_003E", # 100-150%
"B19013_001E"  # MHHI
)
tracts.nationwide <- get_acs(
geography = "tract",
state = state.list[1],
year = 2008,
survey = "acs5",
variables = variable.list,
geometry = FALSE
)
year.list <- 2009:2019
#! Setting up workspace
## Modifying options
options(scipen = 999)
options(timeout = 180)
## Installing and loading required packages
usePackage <- function(p) {
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("dplyr")
usePackage("tidyr")
usePackage("tidycensus")
usePackage("tigris")
usePackage("sf")
usePackage("readxl")
usePackage("leaflet")
census_api_key(readLines("dependencies/censuskey.txt", warn = F))
## Grab Universe Data
## Get data on all census tracts nationwide
state.list <- c(
"AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC",
"FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY",
"LA", "ME", "MT", "NE", "NV", "NH", "NJ", "NM", "NY",
"NC", "ND", "OH", "OK", "OR", "MD", "MA", "MI", "MN",
"MS", "MO", "PA", "RI", "SC", "SD", "TN", "TX", "UT",
"VT", "VA", "WA", "WV", "WI", "WY"
)
variable.list <- c(
"B06012_001E", # Total Pop
"B06012_002E", # Below 100%
"B06012_003E", # 100-150%
"B19013_001E"  # MHHI
)
year.list <- 2009:2019
tracts.nationwide <- get_acs(
geography = "tract",
state = state.list[1],
year = year.list[1],
survey = "acs5",
variables = variable.list,
geometry = FALSE
) %>%
select(GEOID, variable, estimate) %>%
mutate(Year = year.list[1])
View(tracts.nationwide)
#! Setting up workspace
## Modifying options
options(scipen = 999)
options(timeout = 180)
## Installing and loading required packages
usePackage <- function(p) {
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("dplyr")
usePackage("tidyr")
usePackage("tidycensus")
usePackage("tigris")
usePackage("sf")
usePackage("readxl")
usePackage("leaflet")
census_api_key(readLines("dependencies/censuskey.txt", warn = F))
## Grab Universe Data
## Get data on all census tracts nationwide
state.list <- c(
"AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC",
"FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY",
"LA", "ME", "MT", "NE", "NV", "NH", "NJ", "NM", "NY",
"NC", "ND", "OH", "OK", "OR", "MD", "MA", "MI", "MN",
"MS", "MO", "PA", "RI", "SC", "SD", "TN", "TX", "UT",
"VT", "VA", "WA", "WV", "WI", "WY"
)
variable.list <- c(
"B06012_001E", # Total Pop
"B06012_002E", # Below 100%
"B06012_003E", # 100-150%
"B19013_001E"  # MHHI
)
year.list <- 2009:2019
tracts.nationwide <- get_acs(
geography = "tract",
state = state.list[1],
year = year.list[1],
survey = "acs5",
variables = variable.list,
geometry = FALSE
) %>%
select(GEOID, variable, estimate) %>%
mutate(Year = year.list[1])
for (i in 2:length(state.list)) {
temp <- get_acs(
geography = "tract",
state = state.list[1],
year = year.list[1],
survey = "acs5",
variables = variable.list,
geometry = FALSE
) %>%
select(GEOID, variable, estimate) %>%
mutate(Year = year.list[1])
tracts.nationwide <- tracts.nationwide %>%
rbind(temp)
}
#! Setting up workspace
## Modifying options
options(scipen = 999)
options(timeout = 180)
## Installing and loading required packages
usePackage <- function(p) {
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("dplyr")
usePackage("tidyr")
usePackage("tidycensus")
usePackage("tigris")
usePackage("sf")
usePackage("readxl")
usePackage("leaflet")
census_api_key(readLines("dependencies/censuskey.txt", warn = F))
## Grab Universe Data
## Get data on all census tracts nationwide
state.list <- c(
"AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC",
"FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY",
"LA", "ME", "MT", "NE", "NV", "NH", "NJ", "NM", "NY",
"NC", "ND", "OH", "OK", "OR", "MD", "MA", "MI", "MN",
"MS", "MO", "PA", "RI", "SC", "SD", "TN", "TX", "UT",
"VT", "VA", "WA", "WV", "WI", "WY"
)
variable.list <- c(
"B06012_001E", # Total Pop
"B06012_002E", # Below 100%
"B06012_003E", # 100-150%
"B19013_001E"  # MHHI
)
year.list <- 2009:2019
tracts.nationwide <- get_acs(
geography = "tract",
state = state.list[1],
year = year.list[1],
survey = "acs5",
variables = variable.list,
geometry = FALSE
) %>%
select(GEOID, variable, estimate) %>%
mutate(Year = year.list[1])
for (i in 2:length(state.list)) {
temp <- get_acs(
geography = "tract",
state = state.list[i],
year = year.list[1],
survey = "acs5",
variables = variable.list,
geometry = FALSE
) %>%
select(GEOID, variable, estimate) %>%
mutate(Year = year.list[1])
tracts.nationwide <- tracts.nationwide %>%
rbind(temp)
}
for (i in 2:length(year.list)) {
temp <- get_acs(
geography = "tract",
state = state.list[1],
year = year.list[i],
survey = "acs5",
variables = variable.list,
geometry = FALSE
) %>%
select(GEOID, variable, estimate) %>%
mutate(Year = year.list[1])
for (j in 2:length(state.list)) {
temp.2 <- get_acs(
geography = "tract",
state = state.list[j],
year = year.list[i],
survey = "acs5",
variables = variable.list,
geometry = FALSE
) %>%
select(GEOID, variable, estimate) %>%
mutate(Year = year.list[i])
temp <- temp %>%
rbind(temp.2)
}
tracts.nationwide <- tracts.nationwide %>%
rbind(temp)
}
View(tracts.nationwide)
colnames(tracts.nationwide)
BACKUP <- tracts.nationwide
## Clean up nationwide time series
tracts.nationwide <- tracts.nationwide %>%
pivot_wider(names_from = variable,
values_from = estimate)
View(tracts.nationwide)
tracts.nationwide <- BACKUP
View(tracts.nationwide)
## Clean up nationwide time series
tracts.nationwide <- tracts.nationwide %>%
select(GEOID, Year, variable, estimate) %>%
pivot_wider(names_from = variable,
values_from = estimate)
tracts.nationwide <- BACKUP
## Clean up nationwide time series
tracts.nationwide <- tracts.nationwide %>%
mutate(row = row_number()) %>%
select(row, GEOID, Year, variable, estimate) %>%
pivot_wider(names_from = variable,
values_from = estimate)
tracts.nationwide <- BACKUP
## Clean up nationwide time series
tracts.nationwide <- tracts.nationwide %>%
mutate(row = row_number()) %>%
select(row, GEOID, Year, variable, estimate) %>%
pivot_wider(names_from = variable,
values_from = estimate) %>%
select(-row)
View(tracts.nationwide)
tracts.nationwide <- BACKUP
test <- tracts.nationwide[which(duplicated(tracts.nationwide)),]
View(test)
tracts.nationwide <- BACKUP
View(tracts.nationwide)
## Clean up nationwide time series
tracts.nationwide <- tracts.nationwide %>%
select(row, GEOID, Year, variable, estimate)
## Clean up nationwide time series
tracts.nationwide <- tracts.nationwide %>%
select(GEOID, Year, variable, estimate)
View(tracts.nationwide)
View(test)
## Clean up nationwide time series
tracts.nationwide <- tracts.nationwide[!duplicated(tracts.nationwide),]
## Clean up nationwide time series
tracts.nationwide <- tracts.nationwide[!duplicated(tracts.nationwide),] %>%
pivot_wider(names_from = variable,
values_from = estimate)
View(tracts.nationwide)
tracts.nationwide <- BACKUP
View(tracts.nationwide)
tracts.nationwide <- get_acs(
geography = "tract",
state = state.list[1],
year = year.list[1],
survey = "acs5",
variables = variable.list,
geometry = FALSE
) %>%
select(GEOID, variable, estimate) %>%
mutate(Year = year.list[1])
for (i in 2:length(state.list)) {
temp <- get_acs(
geography = "tract",
state = state.list[i],
year = year.list[1],
survey = "acs5",
variables = variable.list,
geometry = FALSE
) %>%
select(GEOID, variable, estimate) %>%
mutate(Year = year.list[1])
tracts.nationwide <- tracts.nationwide %>%
rbind(temp)
}
.rs.restartR()
#! Setting up workspace
## Modifying options
options(scipen = 999)
options(timeout = 180)
## Installing and loading required packages
usePackage <- function(p) {
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("dplyr")
usePackage("tidyr")
usePackage("tidycensus")
usePackage("tigris")
usePackage("sf")
usePackage("readxl")
usePackage("leaflet")
census_api_key(readLines("dependencies/censuskey.txt", warn = F))
## Grab Universe Data
## Get data on all census tracts nationwide
state.list <- c(
"AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC",
"FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY",
"LA", "ME", "MT", "NE", "NV", "NH", "NJ", "NM", "NY",
"NC", "ND", "OH", "OK", "OR", "MD", "MA", "MI", "MN",
"MS", "MO", "PA", "RI", "SC", "SD", "TN", "TX", "UT",
"VT", "VA", "WA", "WV", "WI", "WY"
)
variable.list <- c(
"B06012_001E", # Total Pop
"B06012_002E", # Below 100%
"B06012_003E", # 100-150%
"B19013_001E"  # MHHI
)
year.list <- 2009:2019
tracts.nationwide <- get_acs(
geography = "tract",
state = state.list[1],
year = year.list[1],
survey = "acs5",
variables = variable.list,
geometry = FALSE
) %>%
select(GEOID, variable, estimate) %>%
mutate(Year = year.list[1])
for (i in 2:length(state.list)) {
temp <- get_acs(
geography = "tract",
state = state.list[i],
year = year.list[1],
survey = "acs5",
variables = variable.list,
geometry = FALSE
) %>%
select(GEOID, variable, estimate) %>%
mutate(Year = year.list[1])
tracts.nationwide <- tracts.nationwide %>%
rbind(temp)
}
for (i in 2:length(year.list)) {
temp <- get_acs(
geography = "tract",
state = state.list[1],
year = year.list[i],
survey = "acs5",
variables = variable.list,
geometry = FALSE
) %>%
select(GEOID, variable, estimate) %>%
mutate(Year = year.list[i])
for (j in 2:length(state.list)) {
temp.2 <- get_acs(
geography = "tract",
state = state.list[j],
year = year.list[i],
survey = "acs5",
variables = variable.list,
geometry = FALSE
) %>%
select(GEOID, variable, estimate) %>%
mutate(Year = year.list[i])
temp <- temp %>%
rbind(temp.2)
}
tracts.nationwide <- tracts.nationwide %>%
rbind(temp)
}
BACKUP <- tracts.nationwide
## Clean up nationwide time series
tracts.nationwide <- tracts.nationwide %>%
pivot_wider(names_from = variable,
values_from = estimate)
View(tracts.nationwide)
colnames(tracts.nationwide)
tracts.nationwide <- BACKUP
## Clean up nationwide time series
tracts.nationwide <- tracts.nationwide %>%
pivot_wider(names_from = variable,
values_from = estimate) %>%
mutate(Pov_Below100 = B06012_002 / B06012_001,
Pov_Below150 = (B06012_002 + B06012_003) / B06012_001,
MHHI = B19013_001) %>%
select(GEOID, Year, Pov_Below100, Pov_Below150, MHHI)
View(tracts.nationwide)
### Read in and add OZ designation
oz.designations <- read.csv("dependencies/OZ_Tracts.csv",
colClasses = c("character", "character", "character"))
tracts.nationwide <- tracts.nationwide %>%
mutate(
Is_OZ = ifelse(GEOID %in% oz.designations$GEOID, 1, 0)
)
View(tracts.nationwide)
summary(model.linear)
model.linear <- lm(Is_OZ ~ Pov_Below_100 + MHHI, data = tracts.nationwide[which(tracts.nationwide$Year == 2012),])
### Testing linear
model.linear <- lm(Is_OZ ~ Pov_Below100 + MHHI, data = tracts.nationwide[which(tracts.nationwide$Year == 2012),])
summary(model.linear)
model.linear$coefficients
model.linear$coefficients[1]
test.df <- tracts.nationwide[which(tracts.nationwide$Year == 2012),]
test.df$Pr = model.linear$coefficients[1] +
(model.linear$coefficients[2] * test.df$Pov_Below100) +
(model.linear$coefficients[3] * test.df$MHHI)
View(test.df)
nrow(test.df[which(test.df$Pr > 0.5),])
### Testing linear
model.linear <- lm(Is_OZ ~ Pov_Below150 + MHHI, data = tracts.nationwide[which(tracts.nationwide$Year == 2012),])
test.df <- tracts.nationwide[which(tracts.nationwide$Year == 2012),]
test.df$Pr = model.linear$coefficients[1] +
(model.linear$coefficients[2] * test.df$Pov_Below150) +
(model.linear$coefficients[3] * test.df$MHHI)
nrow(test.df[which(test.df$Pr > 0.5),])
View(test.df)
mean(test.df[which(test.df$Is_OZ == 1),]$Pr)
mean(test.df[which(test.df$Is_OZ == 1),]$Pr, na.rm = T)
mean(test.df[which(test.df$Is_OZ == 0),]$Pr, na.rm = T)
#! Setting up workspace
## Modifying options
options(scipen = 999)
options(timeout = 180)
## Installing and loading required packages
usePackage <- function(p) {
if (!is.element(p, installed.packages()[,1]))
install.packages(p, dep = TRUE)
require(p, character.only = TRUE)
}
usePackage("dplyr")
usePackage("tidyr")
usePackage("tidycensus")
usePackage("tigris")
usePackage("sf")
usePackage("readxl")
usePackage("leaflet")
census_api_key(readLines("dependencies/censuskey.txt", warn = F))
## Read in Tract Limited Data
tracts.nationwide <- st_read("data/processed/Tracts_OZdesignation.gpkg")
View(tracts.nationwide)
